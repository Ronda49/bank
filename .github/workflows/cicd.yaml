name: CI/CD Pipeline - Sudharshan Bank

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # 🧩 1️⃣ Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 🐍 2️⃣ Set up Python
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 📦 3️⃣ Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 🧹 4️⃣ Code formatting with Black (auto-fix mode)
      - name: Run Black formatter (auto fix)
        run: |
          black .
          echo "✅ Code formatted with Black successfully."

      # 🔍 5️⃣ Linting with Flake8
      - name: Run Flake8 (lint check)
        run: |
          flake8 . --max-line-length=88 --ignore=E203,W503
          echo "✅ Linting passed successfully."

      # 🛡️ 6️⃣ Security scanning with Bandit
      - name: Run Bandit security scan
        run: |
          pip install bandit
          bandit -r backend || true
          echo "✅ Bandit security scan completed."

      # 🔒 7️⃣ Install and run Trivy FS (file system scan)
      - name: Run Trivy FS scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          ignore-unfixed: true
          format: table
          exit-code: 0
          vuln-type: 'os,library'
          output: trivy-fs-report.txt

      # 🐳 8️⃣ Build Docker image
      - name: Build Docker image
        run: |
          docker build -t myapp:latest .
          echo "✅ Docker image built successfully."

      # 🧪 9️⃣ Run Trivy Image scan
      - name: Run Trivy Image scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: myapp:latest
          format: table
          exit-code: 0
          ignore-unfixed: true
          output: trivy-image-report.txt

      # ▶️ 🔟 Run the Docker container (test stage)
      - name: Run container (test)
        run: |
          docker run -d -p 8000:8000 --name test_myapp myapp:latest
          sleep 5
          docker ps
          echo "✅ Container is running successfully."

      # ☁️ 1️⃣1️⃣ Push image to Docker Hub or GHCR
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag and Push Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/sudharshan-bank:latest
          docker tag myapp:latest $IMAGE_NAME
          docker push $IMAGE_NAME
          echo "✅ Image pushed successfully to GitHub Container Registry."
